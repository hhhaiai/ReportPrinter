apply plugin: 'com.android.application'

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "osp.leobert.android.reportsample"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [module: "sample",
                mode:"mode_file",
                active_reporter:"on"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        test {
            java.srcDirs = ['src/test/java','./ext']
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.3.0'

    implementation project(':DemoReporterExt')
//    implementation project(':utils_reporter')
    implementation "io.github.leobert-lan:reporter-util:1.0.0"

//    annotationProcessor project(':report-anno-compiler')
    annotationProcessor "io.github.leobert-lan:report-anno-compiler:1.1.3"

    annotationProcessor project(":DemoReporterExt")
//    annotationProcessor project(":utils_reporter")
    annotationProcessor "io.github.leobert-lan:reporter-util:1.0.0"

    //如果某个Module被依赖，这个Module本身也使用打印的话，有些gradle版本可能会出现错误，本身不支持增量编译
    api project(':kotlin_sample')
}
//
//task wrapper4_4(type: Wrapper) {
//    gradleVersion = '4.4'
//    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
//}
//
//task wrapper5_1_1(type: Wrapper) {
//    gradleVersion = '5.1.1'
//    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
//}